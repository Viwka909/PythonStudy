import requests 
import json     
import time      
from datetime import datetime


class TaskManager:
    
    def __init__(self):
        self.base_url = "https://jsonplaceholder.typicode.com"
        self.todos_url = f"{self.base_url}/todos"  # endpoint –¥–ª—è –∑–∞–¥–∞—á
        self.users_url = f"{self.base_url}/users"  # endpoint –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    
    def get_user_info(self, user_id):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –ø–æ ID"""
        response = requests.get(f"{self.users_url}/{user_id}")
        if response.status_code == 200:
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}")
            return None
    
    def get_user_tasks(self, user_id):
        """–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∞–Ω–∞–ª–∏–∑–æ–º —Å—Ç–∞—Ç—É—Å–æ–≤"""
        response = requests.get(f"{self.todos_url}?userId={user_id}")
        if response.status_code != 200:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return None
            
        tasks = response.json()
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        completed = [task for task in tasks if task['completed']]
        pending = [task for task in tasks if not task['completed']]
        
        return {
            'total': len(tasks),
            'completed': len(completed),
            'pending': len(pending),
            'tasks': tasks
        }
    
    def print_user_report(self, user_id):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        user_info = self.get_user_info(user_id)
        if not user_info:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        tasks_info = self.get_user_tasks(user_id)
        if not tasks_info:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return
        
        print(f"\nüìä –û–¢–ß–ï–¢ –ü–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ:")
        print(f"üë§ {user_info.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} ({user_info.get('email', '–ù–µ—Ç email')})")
        print(f"üìã –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {tasks_info['total']}")
        print(f"‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: {tasks_info['completed']}")
        print(f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {tasks_info['pending']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 3 –±–ª–∏–∂–∞–π—à–∏–µ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        pending_tasks = [task for task in tasks_info['tasks'] if not task['completed']]
        if pending_tasks:
            print(f"\nüéØ –ë–ª–∏–∂–∞–π—à–∏–µ –∑–∞–¥–∞—á–∏:")
            for task in pending_tasks[:3]:
                print(f"   ‚è≥ {task['title'][:50]}...")
    
    def create_task(self, user_id, title, completed=False):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        task_data = {
            'userId': user_id,
            'title': title,
            'completed': completed
        }
        
        response = requests.post(self.todos_url, json=task_data)
        if response.status_code == 201:  # 201 Created
            return response.json()
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {response.status_code}")
            return None

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á
def demo_task_manager():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á"""
    manager = TaskManager()
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID 1
    print("=== –û–¢–ß–ï–¢ –ü–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ 1 ===")
    manager.print_user_report(1)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    print("\n=== –°–û–ó–î–ê–ù–ò–ï –ù–û–í–û–ô –ó–ê–î–ê–ß–ò ===")
    new_task = manager.create_task(1, "–ò–∑—É—á–∏—Ç—å Python API –∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç", False)
    if new_task:
        print(f"üÜï –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {new_task['title']}")
        print(f"   ID –∑–∞–¥–∞—á–∏: {new_task.get('id', 'N/A')}")
        print(f"   –°—Ç–∞—Ç—É—Å: {'‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞' if new_task['completed'] else '‚è≥ –í –ø—Ä–æ—Ü–µ—Å—Å–µ'}")

# –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
if __name__ == "__main__":
    demo_task_manager()